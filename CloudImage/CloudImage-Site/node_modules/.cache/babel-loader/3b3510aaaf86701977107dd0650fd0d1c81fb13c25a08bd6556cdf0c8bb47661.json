{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isLoggedIn,setIsLoggedIn]=useState(localStorage.getItem('username')!=null);const login=()=>setIsLoggedIn(true);const logout=()=>setIsLoggedIn(false);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn,login,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isLoggedIn","setIsLoggedIn","localStorage","getItem","login","logout","Provider","value","useAuth"],"sources":["C:/Users/Arian/Documents/project/CIM-Project/client/website/src/authContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('username')!=null);\r\n\r\n  const login = () => setIsLoggedIn(true);\r\n  const logout = () => setIsLoggedIn(false);\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext); "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAEpF,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAMH,aAAa,CAAC,IAAI,CAAC,CACvC,KAAM,CAAAI,MAAM,CAAGA,CAAA,GAAMJ,aAAa,CAAC,KAAK,CAAC,CACzC,mBACEN,IAAA,CAACC,WAAW,CAACU,QAAQ,EAACC,KAAK,CAAE,CAAEP,UAAU,CAAEI,KAAK,CAAEC,MAAO,CAAE,CAAAN,QAAA,CACxDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAS,OAAO,CAAGA,CAAA,GAAMf,UAAU,CAACG,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}